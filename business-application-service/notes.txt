java -Dkie.maven.settings.custom=/deployments/.m2/settings.xml \
-javaagent:/opt/agent-bond/agent-bond.jar=jolokia{{host=0.0.0.0}},jmx_exporter{{9779:/opt/agent-bond/jmx_exporter_config.yml}} \
-XX:+ExitOnOutOfMemoryError -cp . \
-jar /deployments/business-application-service-1.0-SNAPSHOT.jar

Jolokia: Agent started with URL http://10.128.2.85:8778/jolokia/

https://mirror.openshift.com/pub/openshift-v4/clients/oc/latest/linux/oc.tar.gz
curl https://mirror.openshift.com/pub/openshift-v4/clients/oc/latest/linux/oc.tar.gz -O
./oc login --insecure-skip-tls-verify=true --token=sha256~ --server=https://api.cluster.example.com:6443
./oc whoami

---- 

    - image: gcr.io/cloud-builders/mvn
      name: mvn
      resources: {}
      script: >
        whoami
        id
        pwd
        echo "Downloading oc client from $(inputs.params.OC_URL)"
        curl $(inputs.params.OC_URL) -O
        ls
        tar -zxvf oc*.tar.gz
        ls -la
        ./oc version
        ./oc whoami
        ./oc project

        export MAVEN_OPTS="-Xms1024m -Xmx2048m -XX:+ExitOnOutOfMemoryError"

        echo
        echo
        echo "Build kjar"
        mvn install -f ./decisions-showcase -s
        $(workspaces.maven-settings.path)/settings.xml -DskipTests
        -Dmaven.repo.local=$(workspaces.maven-repo.path)

        echo
        echo
        echo "SB conatiner"
        mvn install -P openshift -f ./business-application-service -s
        $(workspaces.maven-settings.path)/settings.xml
        -Dmaven.repo.local=$(workspaces.maven-repo.path)

        echo
        echo
        echo "Deploy to OCP using jKube"
        mvn oc:resource oc:apply -P openshift -f ./business-application-service
        -s $(workspaces.maven-settings.path)/settings.xml
        -Dmaven.repo.local=$(workspaces.maven-repo.path)
      workingDir: /workspace/source
